{
  "openapi": "3.0.3",
  "info": {
    "title": "Polinate External API",
    "version": "1.0.0",
    "description": "External API for partners and services. Authentication via X-Business-Id and X-API-Key headers.\n\nCredentials location: In the Polinate app, navigate to Business Settings → Integrations to find your Business ID and API Key."
  },
  "servers": [
    {
      "url": "https://integrations.polinate.ai",
      "description": "Production"
    }
  ],
  "tags": [
    {
      "name": "Items",
      "description": "Manage items and item variants. Auth: X-Business-Id and X-API-Key (see Business Settings → Integrations)."
    },
    {
      "name": "Buyers",
      "description": "Create buyers and related contacts/locations. Auth: X-Business-Id and X-API-Key (see Business Settings → Integrations)."
    },
    {
      "name": "Pricing",
      "description": "Create price lists and entries. Auth: X-Business-Id and X-API-Key (see Business Settings → Integrations)."
    },
    {
      "name": "Invoices",
      "description": "List and update invoices. Auth: X-Business-Id and X-API-Key (see Business Settings → Integrations)."
    },
    {
      "name": "Orders",
      "description": "Order ingestion. Auth: X-Business-Id and X-API-Key (see Business Settings → Integrations)."
    }
  ],
  "components": {
    "schemas": {
      "StandardError": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "fieldErrors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "required": [
          "errorCode",
          "message"
        ]
      },
      "InvoiceLineItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "invoiceId": {
            "type": "string"
          },
          "itemVariantId": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "unitAmount": {
            "type": "number"
          },
          "currency": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "invoiceId"
        ]
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "DELETED",
              "DRAFT",
              "AUTHORISED",
              "PARTIALLY_PAID",
              "PAID",
              "OVERPAID",
              "OVERDUE",
              "VOIDED",
              "DEFAULTED",
              "CREDITED",
              "REFUNDED"
            ]
          },
          "reference": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          },
          "properties": {
            "type": "object",
            "properties": {}
          },
          "invoiceLineItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvoiceLineItem"
            }
          }
        },
        "required": [
          "id"
        ]
      },
      "ItemPublicInput": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "handle": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "imgUrl": {
            "type": "string",
            "nullable": true
          },
          "customType": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "vendorName": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "name"
        ]
      },
      "ItemVariantPublicInput": {
        "type": "object",
        "properties": {
          "variantName": {
            "type": "string"
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "barcode": {
            "type": "string",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "enum": [
              "USD",
              "EUR",
              "GBP",
              "CAD",
              "AUD",
              "NZD",
              "CHF",
              "JPY",
              "CNY",
              "INR",
              "BRL",
              "MXN",
              "ARS",
              "COP",
              "PHP"
            ]
          },
          "price": {
            "type": "number"
          },
          "cost": {
            "type": "number"
          },
          "weight": {
            "type": "number",
            "nullable": true
          },
          "length": {
            "type": "number",
            "nullable": true
          },
          "width": {
            "type": "number",
            "nullable": true
          },
          "height": {
            "type": "number",
            "nullable": true
          }
        },
        "required": [
          "variantName"
        ]
      },
      "ItemCreateRequest": {
        "type": "object",
        "properties": {
          "item": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "handle": {
                "type": "string",
                "description": "Unique across all items"
              },
              "description": {
                "type": "string"
              },
              "imgUrl": {
                "type": "string",
                "format": "uri"
              },
              "customType": {
                "type": "string"
              },
              "brand": {
                "type": "string"
              },
              "vendorName": {
                "type": "string"
              },
              "type": {
                "type": "string",
                "enum": [
                  "BEVERAGE",
                  "VEGETABLE",
                  "FRUIT",
                  "MEAT",
                  "DAIRY",
                  "CLEANING",
                  "CONDIMENT",
                  "DRY_GOOD",
                  "FROZEN_FOOD",
                  "BAKERY",
                  "POULTRY",
                  "DISPOSABLE",
                  "SEAFOOD",
                  "OTHER"
                ]
              },
              "status": {
                "type": "string",
                "enum": [
                  "ACTIVE",
                  "DRAFT",
                  "ARCHIVED",
                  "DELETED"
                ]
              },
              "properties": {
                "type": "object",
                "properties": {}
              }
            },
            "required": [
              "name",
              "handle",
              "type",
              "status"
            ],
            "additionalProperties": false
          },
          "variants": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "variantName": {
                  "type": "string",
                  "description": "Unique per item"
                },
                "sku": {
                  "type": "string"
                },
                "barcode": {
                  "type": "string"
                },
                "upc": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                },
                "currency": {
                  "type": "string",
                  "enum": [
                    "USD",
                    "EUR",
                    "GBP",
                    "CAD",
                    "AUD",
                    "NZD",
                    "CHF",
                    "JPY",
                    "CNY",
                    "INR",
                    "BRL",
                    "MXN",
                    "ARS",
                    "COP",
                    "PHP"
                  ]
                },
                "price": {
                  "type": "number"
                },
                "cost": {
                  "type": "number"
                },
                "weight": {
                  "type": "number"
                },
                "length": {
                  "type": "number"
                },
                "width": {
                  "type": "number"
                },
                "height": {
                  "type": "number"
                },
                "unitOfMeasure": {
                  "type": "string"
                },
                "leadTime": {
                  "type": "number"
                },
                "reorderPoint": {
                  "type": "number"
                },
                "reorderQuantity": {
                  "type": "number"
                },
                "inStockQuantity": {
                  "type": "number"
                },
                "onOrderQuantity": {
                  "type": "number"
                },
                "countryOfOrigin": {
                  "type": "string"
                },
                "hsCode": {
                  "type": "string"
                },
                "eccn": {
                  "type": "string"
                },
                "customsDeclarationInfo": {
                  "type": "string"
                },
                "sequence": {
                  "type": "number"
                },
                "properties": {
                  "type": "object",
                  "properties": {}
                }
              },
              "required": [
                "variantName",
                "currency",
                "price",
                "cost"
              ],
              "additionalProperties": false
            },
            "minItems": 1
          }
        },
        "required": [
          "item",
          "variants"
        ]
      },
      "BuyerPublic": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "legalName": {
            "type": "string"
          },
          "primaryEmail": {
            "type": "string",
            "format": "email"
          },
          "primaryPhone": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "legalName"
        ]
      },
      "BuyerInfoPublic": {
        "type": "object",
        "properties": {}
      },
      "BuyerPhonePublic": {
        "type": "object",
        "properties": {
          "phone": {
            "type": "string"
          },
          "contactName": {
            "type": "string"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isVerified": {
            "type": "boolean"
          },
          "verifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sequence": {
            "type": "number"
          }
        },
        "required": [
          "phone"
        ]
      },
      "BuyerEmailPublic": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "contactName": {
            "type": "string"
          },
          "isPrimary": {
            "type": "boolean"
          },
          "isVerified": {
            "type": "boolean"
          },
          "verifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "sequence": {
            "type": "number"
          }
        },
        "required": [
          "email"
        ]
      },
      "BuyerLocationPublic": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "WAREHOUSE",
              "DISTRIBUTION",
              "STORE"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "ACTIVE",
              "INACTIVE",
              "DELETED"
            ]
          },
          "addressLine1": {
            "type": "string"
          },
          "addressLine2": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postcode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        },
        "required": [
          "label",
          "type",
          "status",
          "addressLine1",
          "city",
          "state",
          "postcode",
          "country"
        ]
      },
      "BuyerCreateRequestPublic": {
        "type": "object",
        "properties": {
          "buyer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "legalName": {
                "type": "string"
              },
              "primaryEmail": {
                "type": "string",
                "format": "email"
              },
              "primaryPhone": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "legalName"
            ]
          },
          "buyerInfo": {
            "type": "object",
            "properties": {}
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "phone": {
                  "type": "string",
                  "description": "Must be unique per buyer"
                },
                "contactName": {
                  "type": "string"
                },
                "isPrimary": {
                  "type": "boolean"
                },
                "isVerified": {
                  "type": "boolean"
                },
                "verifiedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "sequence": {
                  "type": "number"
                }
              },
              "required": [
                "phone"
              ]
            },
            "default": []
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "description": "Must be unique per buyer"
                },
                "contactName": {
                  "type": "string"
                },
                "isPrimary": {
                  "type": "boolean"
                },
                "isVerified": {
                  "type": "boolean"
                },
                "verifiedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "sequence": {
                  "type": "number"
                }
              },
              "required": [
                "email"
              ]
            },
            "default": []
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "label": {
                  "type": "string",
                  "description": "Must be unique per buyer"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "WAREHOUSE",
                    "DISTRIBUTION",
                    "STORE"
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "DRAFT",
                    "ACTIVE",
                    "INACTIVE",
                    "DELETED"
                  ]
                },
                "addressLine1": {
                  "type": "string"
                },
                "addressLine2": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postcode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              },
              "required": [
                "label",
                "type",
                "status",
                "addressLine1",
                "city",
                "state",
                "postcode",
                "country"
              ]
            },
            "default": []
          }
        },
        "required": [
          "buyer"
        ],
        "example": {
          "buyer": {
            "name": "Acme Pty Ltd",
            "legalName": "Acme Pty Ltd"
          }
        }
      },
      "ItemListPublic": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "nullable": true,
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "nullable": true,
            "format": "date-time"
          },
          "globalPriceFactor": {
            "type": "number",
            "nullable": true
          },
          "globalCostFactor": {
            "type": "number",
            "nullable": true
          }
        },
        "required": [
          "label"
        ]
      },
      "ItemListEntryPublic": {
        "type": "object",
        "properties": {
          "itemVariantId": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "cost": {
            "type": "number"
          },
          "currency": {
            "type": "string",
            "enum": [
              "USD",
              "EUR",
              "GBP",
              "CAD",
              "AUD",
              "NZD",
              "CHF",
              "JPY",
              "CNY",
              "INR",
              "BRL",
              "MXN",
              "ARS",
              "COP",
              "PHP"
            ]
          }
        },
        "required": [
          "itemVariantId"
        ]
      },
      "ItemCreateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "id": {
            "type": "string"
          }
        },
        "required": [
          "success",
          "id"
        ]
      },
      "BuyerCreateRequest": {
        "type": "object",
        "properties": {
          "buyer": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name"
            ]
          },
          "buyerInfo": {
            "type": "object",
            "properties": {}
          },
          "phones": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "phone": {
                  "type": "string"
                }
              },
              "required": [
                "phone"
              ]
            }
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email"
                }
              },
              "required": [
                "email"
              ]
            }
          },
          "locations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "addressLine1": {
                  "type": "string"
                },
                "city": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                },
                "postcode": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                }
              },
              "required": [
                "addressLine1",
                "city",
                "state",
                "postcode",
                "country"
              ]
            }
          }
        },
        "required": [
          "buyer"
        ]
      },
      "BuyerCreateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "phantomId": {
            "type": "string"
          },
          "partnershipId": {
            "type": "string"
          }
        },
        "required": [
          "success",
          "phantomId",
          "partnershipId"
        ]
      },
      "PricingCreateRequest": {
        "type": "object",
        "properties": {
          "businessId": {
            "type": "string"
          },
          "list": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              }
            },
            "required": [
              "label"
            ]
          },
          "entries": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "itemVariantId": {
                  "type": "string"
                }
              },
              "required": [
                "itemVariantId"
              ]
            },
            "minItems": 1
          }
        },
        "required": [
          "businessId",
          "list",
          "entries"
        ]
      },
      "PricingCreateResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "success"
        ]
      },
      "OrdersPostRequest": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string"
          },
          "businessId": {
            "type": "string"
          }
        },
        "required": [
          "orderId",
          "businessId"
        ]
      },
      "OrdersPostResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "success"
        ]
      },
      "Paginated_ZodObject": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Invoice"
            }
          },
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          }
        },
        "required": [
          "items",
          "total",
          "page",
          "pageSize"
        ]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/api/v1/items": {
      "post": {
        "operationId": "createItem",
        "summary": "Create an item and its variants",
        "description": "Create a parent item and its variants in one request. Idempotent via Idempotency-Key.",
        "tags": [
          "Items"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Business identifier for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{businessId}}"
            },
            "required": true,
            "name": "X-Business-Id",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Per-business API key for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{apiKey}}"
            },
            "required": true,
            "name": "X-API-Key",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Idempotency key for POST operations",
              "example": "{{idempotencyKey}}"
            },
            "required": false,
            "name": "Idempotency-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ItemCreateRequest"
              },
              "examples": {
                "Minimal": {
                  "summary": "Minimal required fields",
                  "value": {
                    "item": {
                      "name": "Widget",
                      "handle": "widget-1",
                      "type": "OTHER",
                      "status": "ACTIVE"
                    },
                    "variants": [
                      {
                        "variantName": "Default",
                        "currency": "AUD",
                        "price": 12.34,
                        "cost": 8.5
                      }
                    ]
                  }
                },
                "Full": {
                  "summary": "All supported fields with multiple variants",
                  "value": {
                    "item": {
                      "name": "Widget Deluxe",
                      "handle": "widget-deluxe-2000",
                      "type": "OTHER",
                      "status": "ACTIVE",
                      "description": "A premium multi-purpose widget",
                      "imgUrl": "https://cdn.example.com/widget-deluxe.png",
                      "customType": "HARDWARE",
                      "brand": "Acme",
                      "vendorName": "Acme Manufacturing",
                      "properties": {
                        "colorOptions": [
                          "red",
                          "blue"
                        ]
                      }
                    },
                    "variants": [
                      {
                        "variantName": "Default",
                        "sku": "WID-DEL-DEF",
                        "barcode": "1234567890123",
                        "currency": "AUD",
                        "price": 19.99,
                        "cost": 10,
                        "weight": 0.5,
                        "length": 10,
                        "width": 5,
                        "height": 3
                      },
                      {
                        "variantName": "Large",
                        "sku": "WID-DEL-L",
                        "barcode": "1234567890124",
                        "currency": "AUD",
                        "price": 24.99,
                        "cost": 13
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ItemCreateResponse"
                },
                "example": {
                  "success": true,
                  "id": "itm_123"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string"
                },
                "description": "Seconds to wait before retrying"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/buyers": {
      "post": {
        "operationId": "createBuyer",
        "summary": "Create a buyer (phantom) and related contacts/locations",
        "description": "Creates a buyer (phantom) with optional contacts and locations; links default item list for the supplier business. Idempotent via Idempotency-Key.",
        "tags": [
          "Buyers"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Business identifier for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{businessId}}"
            },
            "required": true,
            "name": "X-Business-Id",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Per-business API key for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{apiKey}}"
            },
            "required": true,
            "name": "X-API-Key",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Idempotency key for POST operations",
              "example": "{{idempotencyKey}}"
            },
            "required": false,
            "name": "Idempotency-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BuyerCreateRequestPublic"
              },
              "examples": {
                "Minimal": {
                  "summary": "Minimal required fields",
                  "value": {
                    "buyer": {
                      "name": "Acme Pty Ltd",
                      "legalName": "Acme Pty Ltd"
                    }
                  }
                },
                "Full": {
                  "summary": "All fields with multiple contacts and locations",
                  "value": {
                    "buyer": {
                      "name": "Globex Trading Co",
                      "legalName": "Globex Trading Company Pty Ltd",
                      "primaryEmail": "accounts@globex.example",
                      "primaryPhone": "+61 2 9000 0000"
                    },
                    "buyerInfo": {
                      "taxNumber": "ABN 12 345 678 901"
                    },
                    "emails": [
                      {
                        "email": "orders@globex.example",
                        "contactName": "Procurement",
                        "isPrimary": true,
                        "isVerified": true,
                        "verifiedAt": "2025-01-15T10:00:00.000Z",
                        "sequence": 1
                      },
                      {
                        "email": "warehouse@globex.example",
                        "contactName": "Warehouse",
                        "isPrimary": false,
                        "isVerified": false,
                        "sequence": 2
                      }
                    ],
                    "phones": [
                      {
                        "phone": "+61 400 000 001",
                        "contactName": "Procurement",
                        "isPrimary": true,
                        "isVerified": true,
                        "verifiedAt": "2025-01-15T10:00:00.000Z",
                        "sequence": 1
                      },
                      {
                        "phone": "+61 400 000 002",
                        "contactName": "Receiving",
                        "isPrimary": false,
                        "isVerified": false,
                        "sequence": 2
                      }
                    ],
                    "locations": [
                      {
                        "label": "Sydney DC",
                        "type": "WAREHOUSE",
                        "status": "ACTIVE",
                        "addressLine1": "1 George St",
                        "addressLine2": "Dock 3",
                        "city": "Sydney",
                        "state": "NSW",
                        "postcode": "2000",
                        "country": "AU"
                      },
                      {
                        "label": "Melbourne Store",
                        "type": "STORE",
                        "status": "ACTIVE",
                        "addressLine1": "100 Collins St",
                        "city": "Melbourne",
                        "state": "VIC",
                        "postcode": "3000",
                        "country": "AU"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyerCreateResponse"
                },
                "example": {
                  "success": true,
                  "phantomId": "phm_123",
                  "partnershipId": "prt_123"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                },
                "examples": {
                  "MissingRequired": {
                    "summary": "Missing required fields",
                    "value": {
                      "errorCode": "VALIDATION_ERROR",
                      "message": "Some information looks incorrect. Please review the highlighted fields.",
                      "fieldErrors": {
                        "buyer.name": "Required",
                        "buyer.legalName": "Required"
                      }
                    }
                  },
                  "DuplicateEmails": {
                    "summary": "Duplicate emails",
                    "value": {
                      "errorCode": "VALIDATION_ERROR",
                      "message": "Some information looks incorrect. Please review the highlighted fields.",
                      "fieldErrors": {
                        "emails.1.email": "Duplicate email addresses are not allowed."
                      }
                    }
                  },
                  "DuplicatePhones": {
                    "summary": "Duplicate phones",
                    "value": {
                      "errorCode": "VALIDATION_ERROR",
                      "message": "Some information looks incorrect. Please review the highlighted fields.",
                      "fieldErrors": {
                        "phones.1.phone": "Duplicate phone numbers are not allowed."
                      }
                    }
                  },
                  "DuplicateLocationLabels": {
                    "summary": "Duplicate location labels",
                    "value": {
                      "errorCode": "VALIDATION_ERROR",
                      "message": "Some information looks incorrect. Please review the highlighted fields.",
                      "fieldErrors": {
                        "locations.1.label": "Duplicate location labels are not allowed."
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                },
                "example": {
                  "errorCode": "UNAUTHORIZED",
                  "message": "Unauthorized"
                }
              }
            }
          },
          "409": {
            "description": "Conflict (DB unique constraint)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                },
                "examples": {
                  "EmailConflict": {
                    "summary": "Buyer email unique",
                    "value": {
                      "errorCode": "CONFLICT",
                      "message": "This buyer already has that email address."
                    }
                  },
                  "PhoneConflict": {
                    "summary": "Buyer phone unique",
                    "value": {
                      "errorCode": "CONFLICT",
                      "message": "This buyer already has that phone number."
                    }
                  },
                  "LocationLabelConflict": {
                    "summary": "Location label unique",
                    "value": {
                      "errorCode": "CONFLICT",
                      "message": "This buyer already has a location with that label."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string"
                },
                "description": "Seconds to wait before retrying"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                },
                "examples": {
                  "BurstyTraffic": {
                    "summary": "Too many requests",
                    "value": {
                      "errorCode": "RATE_LIMITED",
                      "message": "You’re sending requests too quickly. Please try again shortly."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Default item list missing or duplicated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                },
                "example": {
                  "errorCode": "INTERNAL_ERROR",
                  "message": "Default item list missing or duplicated"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/pricing": {
      "post": {
        "operationId": "createPricing",
        "summary": "Create a price list and entries",
        "description": "Creates a price list with entries and optionally assigns it to partnerships (buyers). Idempotent via Idempotency-Key.",
        "tags": [
          "Pricing"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Business identifier for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{businessId}}"
            },
            "required": true,
            "name": "X-Business-Id",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Per-business API key for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{apiKey}}"
            },
            "required": true,
            "name": "X-API-Key",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Idempotency key for POST operations",
              "example": "{{idempotencyKey}}"
            },
            "required": false,
            "name": "Idempotency-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "itemListData": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "Must be unique per supplier business"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "DRAFT",
                          "ACTIVE",
                          "ARCHIVED"
                        ]
                      },
                      "startDate": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time"
                      },
                      "endDate": {
                        "type": "string",
                        "nullable": true,
                        "format": "date-time"
                      },
                      "globalPriceFactor": {
                        "type": "number",
                        "nullable": true
                      },
                      "globalCostFactor": {
                        "type": "number",
                        "nullable": true
                      }
                    },
                    "required": [
                      "label"
                    ],
                    "additionalProperties": false
                  },
                  "entries": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "itemVariantId": {
                          "type": "string",
                          "description": "Cannot repeat for the same list"
                        },
                        "currency": {
                          "type": "string",
                          "enum": [
                            "USD",
                            "EUR",
                            "GBP",
                            "CAD",
                            "AUD",
                            "NZD",
                            "CHF",
                            "JPY",
                            "CNY",
                            "INR",
                            "BRL",
                            "MXN",
                            "ARS",
                            "COP",
                            "PHP"
                          ]
                        },
                        "overrideFlatPrice": {
                          "type": "number"
                        },
                        "overrideFlatCost": {
                          "type": "number"
                        },
                        "overridePriceFactor": {
                          "type": "number"
                        },
                        "overrideCostFactor": {
                          "type": "number"
                        },
                        "label": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "itemVariantId"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 1
                  },
                  "partnerships": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "default": []
                  }
                },
                "required": [
                  "itemListData",
                  "entries"
                ]
              },
              "example": {
                "itemListData": {
                  "label": "Winter 2025",
                  "status": "ACTIVE",
                  "globalPriceFactor": 1.05,
                  "globalCostFactor": 0.95,
                  "startDate": "2025-06-01T00:00:00Z",
                  "endDate": "2025-08-31T23:59:59Z"
                },
                "entries": [
                  {
                    "itemVariantId": "var_123",
                    "overrideFlatPrice": 10,
                    "currency": "AUD"
                  }
                ],
                "partnerships": [
                  "prt_123"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PricingCreateResponse"
                },
                "example": {
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string"
                },
                "description": "Seconds to wait before retrying"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices": {
      "get": {
        "operationId": "listInvoices",
        "summary": "List invoices",
        "description": "Returns a paginated list of invoices with optional filters by creation time, artefact presence, and status.",
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "example": 1
            },
            "required": false,
            "name": "page",
            "in": "query"
          },
          {
            "schema": {
              "type": "integer",
              "minimum": 0,
              "exclusiveMinimum": true,
              "example": 20
            },
            "required": false,
            "name": "limit",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2024-01-01T00:00:00Z"
            },
            "required": false,
            "name": "createdSince",
            "in": "query"
          },
          {
            "schema": {
              "type": "boolean",
              "example": true
            },
            "required": false,
            "name": "hasArtefact",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "enum": [
                "DELETED",
                "DRAFT",
                "AUTHORISED",
                "PARTIALLY_PAID",
                "PAID",
                "OVERPAID",
                "OVERDUE",
                "VOIDED",
                "DEFAULTED",
                "CREDITED",
                "REFUNDED"
              ],
              "example": "PAID"
            },
            "required": false,
            "name": "status",
            "in": "query"
          },
          {
            "schema": {
              "type": "string",
              "description": "Business identifier for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{businessId}}"
            },
            "required": true,
            "name": "X-Business-Id",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Per-business API key for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{apiKey}}"
            },
            "required": true,
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Paginated_ZodObject"
                },
                "example": {
                  "items": [],
                  "total": 0,
                  "page": 1,
                  "pageSize": 20
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string"
                },
                "description": "Seconds to wait before retrying"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/invoices/{id}": {
      "get": {
        "operationId": "getInvoice",
        "summary": "Get an invoice by ID",
        "description": "Retrieves a single invoice by ID including its line items.",
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "inv_123"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "Business identifier for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{businessId}}"
            },
            "required": true,
            "name": "X-Business-Id",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Per-business API key for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{apiKey}}"
            },
            "required": true,
            "name": "X-API-Key",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                },
                "example": {
                  "id": "inv_123",
                  "status": "PAID",
                  "invoiceLineItems": []
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string"
                },
                "description": "Seconds to wait before retrying"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateInvoice",
        "summary": "Update an invoice (partial)",
        "description": "Partially updates invoice fields such as status, reference, notes, and provider-specific properties. Idempotent via Idempotency-Key.",
        "tags": [
          "Invoices"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "example": "inv_123"
            },
            "required": true,
            "name": "id",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "Business identifier for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{businessId}}"
            },
            "required": true,
            "name": "X-Business-Id",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Per-business API key for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{apiKey}}"
            },
            "required": true,
            "name": "X-API-Key",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Idempotency key for POST operations",
              "example": "{{idempotencyKey}}"
            },
            "required": false,
            "name": "Idempotency-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "reference": {
                    "type": "string",
                    "nullable": true
                  },
                  "notes": {
                    "type": "string",
                    "nullable": true
                  },
                  "properties": {
                    "type": "object",
                    "properties": {}
                  }
                },
                "example": {
                  "status": "PAID",
                  "reference": "PO-123",
                  "notes": "Thanks!"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                },
                "example": {
                  "id": "inv_123",
                  "status": "PAID"
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string"
                },
                "description": "Seconds to wait before retrying"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orders": {
      "post": {
        "operationId": "createOrder",
        "summary": "Notify system that an order has been created (ingestion)",
        "description": "Idempotent ingestion endpoint. Provide Idempotency-Key computed as sha256(\"${orderId}-${businessId}-order-integration\").",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "Business identifier for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{businessId}}"
            },
            "required": true,
            "name": "X-Business-Id",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Per-business API key for external auth. Find in Polinate app → Business Settings → Integrations.",
              "example": "{{apiKey}}"
            },
            "required": true,
            "name": "X-API-Key",
            "in": "header"
          },
          {
            "schema": {
              "type": "string",
              "description": "Idempotency key for POST operations",
              "example": "{{idempotencyKey}}"
            },
            "required": false,
            "name": "Idempotency-Key",
            "in": "header"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrdersPostRequest"
              },
              "example": {
                "orderId": "ord_123",
                "businessId": "{{businessId}}"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersPostResponse"
                },
                "example": {
                  "success": true
                }
              }
            }
          },
          "400": {
            "description": "Invalid payload or idempotency key",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "429": {
            "description": "Rate limited",
            "headers": {
              "Retry-After": {
                "schema": {
                  "type": "string"
                },
                "description": "Seconds to wait before retrying"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          },
          "500": {
            "description": "Processing failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StandardError"
                }
              }
            }
          }
        }
      }
    }
  }
}